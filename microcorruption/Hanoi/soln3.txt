4520 <login>
4520:  c243 1024      mov.b	#0x0, &0x2410
4524:  3f40 7e44      mov	#0x447e "Enter the password to continue.", r15
4528:  b012 de45      call	#0x45de <puts>
452c:  3f40 9e44      mov	#0x449e "Remember: passwords are between 8 and 16 characters.", r15
4530:  b012 de45      call	#0x45de <puts>
4534:  3e40 1c00      mov	#0x1c, r14
4538:  3f40 0024      mov	#0x2400, r15
453c:  b012 ce45      call	#0x45ce <getsn>
4540:  3f40 0024      mov	#0x2400, r15
4544:  b012 5444      call	#0x4454 <test_password_valid>
4548:  0f93           tst	r15
454a:  0324           jz	$+0x8
454c:  f240 0400 1024 mov.b	#0x4, &0x2410
4552:  3f40 d344      mov	#0x44d3 "Testing if password is valid.", r15
4556:  b012 de45      call	#0x45de <puts>
455a:  f290 c400 1024 cmp.b	#0xc4, &0x2410
4560:  0720           jne	#0x4570 <login+0x50>
4562:  3f40 f144      mov	#0x44f1 "Access granted.", r15
4566:  b012 de45      call	#0x45de <puts>
456a:  b012 4844      call	#0x4448 <unlock_door>
456e:  3041           ret
4570:  3f40 0145      mov	#0x4501 "That password is not correct.", r15
4574:  b012 de45      call	#0x45de <puts>
4578:  3041           ret


4454 <test_password_valid>
4454:  0412           push	r4
4456:  0441           mov	sp, r4
4458:  2453           incd	r4
445a:  2183           decd	sp
445c:  c443 fcff      mov.b	#0x0, -0x4(r4)
4460:  3e40 fcff      mov	#0xfffc, r14
4464:  0e54           add	r4, r14
4466:  0e12           push	r14
4468:  0f12           push	r15
446a:  3012 7d00      push	#0x7d
446e:  b012 7a45      call	#0x457a <INT>
4472:  5f44 fcff      mov.b	-0x4(r4), r15
4476:  8f11           sxt	r15
4478:  3152           add	#0x8, sp
447a:  3441           pop	r4
447c:  3041           ret


login
    password length 8 to 16

    r14  =  0x1c    -->  28
    r15  =  0x2400  -->  9216

    getsn
        setup for interrupt

        INT
            set sr = 0x8200
            get user input

        ret

    r15  =  0x2400  -->  9216

    test_password_valid
        r4   =  43fc
        sp   =  43f8
        (r4)-4  --> 43f8 =  0
        r14  =  fffc
        r14  = r4 + r14  = 43f8
        interrupt

            INT
                set sr = 0xfd00

        r15  = (r4)-4  --> 43f8 =  0

        ret


    test and jz on r15

    cmp.b	#0xc4, &0x2410        0xc4    -->  196




    2400:   3139 3600 0000 0000 0000 0000 0000 0000   196.............
    2410:   0000 0000 0000 0000 0000 0000 0000 0000   ................


    initial user input started at &0x2400
    need 16 byte offset then 0xc4 (196)


    pass as hex encoded input

    61616161616161616161616161616161c4
